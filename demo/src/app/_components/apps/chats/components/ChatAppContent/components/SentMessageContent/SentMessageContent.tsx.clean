import React from "react";
import { Box, Typography } from "@mui/material";
import { MessagesProps } from "@app/_components/apps/_types/ChatTypes";
import CheckCircleIcon from '@mui/icons-material/CheckCircle';
import ErrorIcon from '@mui/icons-material/Error';
import AccessTimeIcon from '@mui/icons-material/AccessTime';

export type MessageStatus = 'sending' | 'sent' | 'delivered' | 'read' | 'error';

interface SentMessageContentProps {
  message: MessagesProps & {
    content: string;
    timestamp?: string | Date;
    status?: MessageStatus;
  };
  senderName: string;
  status?: MessageStatus;
}

const SentMessageContent: React.FC<SentMessageContentProps> = ({
  message,
  senderName,
  status: propStatus
}) => {
  const status = propStatus || message.status || 'sent';
  
  // Format the timestamp
  const formatTimestamp = (timestamp?: string | Date) => {
    if (!timestamp) return '';
    const date = new Date(timestamp);
    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
  };

  // Get status icon
  const getStatusIcon = () => {
    switch (status) {
      case 'sending':
        return <AccessTimeIcon color="disabled" sx={{ fontSize: '1rem', ml: 0.5 }} />;
      case 'error':
        return <ErrorIcon color="error" sx={{ fontSize: '1rem', ml: 0.5 }} />;
      case 'read':
        return <CheckCircleIcon color="primary" sx={{ fontSize: '1rem', ml: 0.5 }} />;
      case 'delivered':
      case 'sent':
        return <CheckCircleIcon color="action" sx={{ fontSize: '1rem', ml: 0.5 }} />;
      default:
        return null;
    }
  };

  return (
    <Box
      sx={{
        display: 'flex',
        flexDirection: 'column',
        alignItems: 'flex-end',
        mb: 2,
        width: '100%',
        maxWidth: '80%',
        alignSelf: 'flex-end'
      }}
    >
      <Typography
        variant="body2"
        color="text.secondary"
        sx={{ mb: 0.5, fontWeight: 500 }}
      >
        {senderName}
      </Typography>
      <Box
        sx={{
          display: 'flex',
          flexDirection: 'column',
          alignItems: 'flex-end',
          maxWidth: '100%'
        }}
      >
        <Box
          sx={{
            bgcolor: 'primary.main',
            color: 'primary.contrastText',
            p: 2,
            borderRadius: 2,
            borderTopRightRadius: 0,
            boxShadow: '0 1px 2px 0 rgba(0, 0, 0, 0.1)',
            position: 'relative',
            '&:before': {
              content: '""',
              position: 'absolute',
              top: 0,
              right: -8,
              width: 16,
              height: 16,
              clipPath: 'polygon(100% 0, 0 100%, 100% 100%)',
              bgcolor: 'primary.main',
              transform: 'rotate(90deg)'
            }
          }}
        >
          <Typography variant="body1" sx={{ wordBreak: 'break-word' }}>
            {message.content}
          </Typography>
        </Box>
        <Box sx={{ display: 'flex', alignItems: 'center', mt: 0.5 }}>
          <Typography
            variant="caption"
            color="text.secondary"
            sx={{ mr: 0.5 }}
          >
            {formatTimestamp(message.timestamp || message.sent_at)}
          </Typography>
          {getStatusIcon()}
        </Box>
      </Box>
    </Box>
  );
};

export { SentMessageContent };
